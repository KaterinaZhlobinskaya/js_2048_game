{"mappings":"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","sources":["<anon>","src/scripts/main.js","src/modules/Game.class.js","node_modules/@swc/helpers/esm/_class_call_check.js","node_modules/@swc/helpers/esm/_create_class.js","node_modules/@swc/helpers/esm/_sliced_to_array.js","node_modules/@swc/helpers/esm/_array_with_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array_limit.js","node_modules/@swc/helpers/esm/_non_iterable_rest.js","node_modules/@swc/helpers/esm/_unsupported_iterable_to_array.js","node_modules/@swc/helpers/esm/_array_like_to_array.js","node_modules/@swc/helpers/esm/_to_consumable_array.js","node_modules/@swc/helpers/esm/_array_without_holes.js","node_modules/@swc/helpers/esm/_iterable_to_array.js","node_modules/@swc/helpers/esm/_non_iterable_spread.js"],"sourcesContent":["(function () {\n\"use strict\";\nvar $3d28d7f1aac198f5$exports = {};\nfunction $8713978b2328d32b$export$2996f80ef42b8419(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\n\n\nfunction $4fc75ccb937ab1df$var$_defineProperties(target, props) {\n    for(var i = 0; i < props.length; i++){\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n        if (\"value\" in descriptor) descriptor.writable = true;\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nfunction $4fc75ccb937ab1df$export$d60067ff2358eee8(Constructor, protoProps, staticProps) {\n    if (protoProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) $4fc75ccb937ab1df$var$_defineProperties(Constructor, staticProps);\n    return Constructor;\n}\n\n\nfunction $09cbfe85151ea6c6$export$e6256bf45c68d561(arr) {\n    if (Array.isArray(arr)) return arr;\n}\n\n\nfunction $8ca2848f896a6803$export$2fd15edff6687200(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n    if (_i == null) return;\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n    try {\n        for(_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true){\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally{\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally{\n            if (_d) throw _e;\n        }\n    }\n    return _arr;\n}\n\n\nfunction $a0bc1859061deae1$export$60dbc22abd7da546() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\nfunction $c3b10a83b523f372$export$79e617b1955a2616(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\n\n\nfunction $d4f69c5c6c4654b1$export$a5be06335b3a083c(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(o, minLen);\n}\n\n\nfunction $efec029548ccee7f$export$fdf2a89c76341bbf(arr, i) {\n    return (0, $09cbfe85151ea6c6$export$e6256bf45c68d561)(arr) || (0, $8ca2848f896a6803$export$2fd15edff6687200)(arr, i) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr, i) || (0, $a0bc1859061deae1$export$60dbc22abd7da546)();\n}\n\n\n\nfunction $c50969dc1df61e8b$export$7e0947b5ad3404e2(arr) {\n    if (Array.isArray(arr)) return (0, $c3b10a83b523f372$export$79e617b1955a2616)(arr);\n}\n\n\nfunction $09c9f293d010c0e1$export$1eb58a6e75231000(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\n\n\nfunction $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n\n\nfunction $227c6742e0ff6f82$export$1b5e630bc3aea29f(arr) {\n    return (0, $c50969dc1df61e8b$export$7e0947b5ad3404e2)(arr) || (0, $09c9f293d010c0e1$export$1eb58a6e75231000)(arr) || (0, $d4f69c5c6c4654b1$export$a5be06335b3a083c)(arr) || (0, $38c2d4931cb7a7c4$export$e6f3c4780d19eb2b)();\n}\n\n\n\"use strict\";\nfunction $3d28d7f1aac198f5$var$copyState(state) {\n    return state.map(function(row) {\n        return (0, $227c6742e0ff6f82$export$1b5e630bc3aea29f)(row);\n    });\n}\nvar $3d28d7f1aac198f5$var$Game = /*#__PURE__*/ function() {\n    function Game() {\n        var initialState = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : [\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ],\n            [\n                0,\n                0,\n                0,\n                0\n            ]\n        ];\n        (0, $8713978b2328d32b$export$2996f80ef42b8419)(this, Game);\n        this.state = $3d28d7f1aac198f5$var$copyState(initialState);\n        this.initialState = $3d28d7f1aac198f5$var$copyState(initialState);\n        this.score = 0;\n        this.status = \"idle\";\n    }\n    (0, $4fc75ccb937ab1df$export$d60067ff2358eee8)(Game, [\n        {\n            key: \"randomNum\",\n            value: function randomNum() {\n                var keys = Object.entries(this.state.flat()).filter(function(param) {\n                    var _param = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(param, 2), value = _param[1];\n                    return value === 0;\n                }).map(function(param) {\n                    var _param = (0, $efec029548ccee7f$export$fdf2a89c76341bbf)(param, 1), key = _param[0];\n                    return key;\n                });\n                if (keys.length === 0) return;\n                var index = keys[Math.floor(Math.random() * keys.length)];\n                var rowKey = Math.floor(index / this.state.length);\n                var columnKey = index % this.state.length;\n                var num = Math.random() >= 0.9 ? 4 : 2;\n                this.state[rowKey][columnKey] = num;\n            }\n        },\n        {\n            key: \"mergeArr\",\n            value: function mergeArr(arr) {\n                var inverse = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                if (inverse) {\n                    for(var i = arr.length - 1; i > 0; i--){\n                        if (arr[i] !== 0) for(var j = i - 1; j >= 0; j--){\n                            if (arr[i] === arr[j]) {\n                                arr[i] *= 2;\n                                arr[j] = 0;\n                                this.score += arr[i];\n                                break;\n                            } else if (arr[i] !== arr[j] && arr[j]) break;\n                        }\n                    }\n                    for(var i1 = arr.length - 1; i1 > 0; i1--)if (arr[i1] === 0) {\n                        for(var j1 = i1 - 1; j1 >= 0; j1--)if (arr[j1] !== 0) {\n                            arr[i1] = arr[j1];\n                            arr[j1] = 0;\n                            break;\n                        }\n                    }\n                } else {\n                    for(var i2 = 0; i2 < arr.length - 1; i2++){\n                        if (arr[i2] !== 0) for(var j2 = i2 + 1; j2 < arr.length; j2++){\n                            if (arr[i2] === arr[j2]) {\n                                arr[i2] *= 2;\n                                arr[j2] = 0;\n                                this.score += arr[i2];\n                                break;\n                            } else if (arr[i2] !== arr[j2] && arr[j2]) break;\n                        }\n                    }\n                    for(var i3 = 0; i3 < arr.length; i3++)if (arr[i3] === 0) {\n                        for(var j3 = i3 + 1; j3 < arr.length; j3++)if (arr[j3] !== 0) {\n                            arr[i3] = arr[j3];\n                            arr[j3] = 0;\n                            break;\n                        }\n                    }\n                }\n            }\n        },\n        {\n            key: \"mergeColumn\",\n            value: function mergeColumn(index) {\n                var inverse = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                var column = this.state.map(function(row) {\n                    return row[index];\n                });\n                this.mergeArr(column, inverse);\n                this.state.forEach(function(row, rowIndex) {\n                    row[index] = column[rowIndex];\n                });\n            }\n        },\n        {\n            key: \"mergeRow\",\n            value: function mergeRow(index) {\n                var inverse = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : false;\n                var row = this.state[index];\n                this.mergeArr(row, inverse);\n            }\n        },\n        {\n            key: \"getStrState\",\n            value: function getStrState() {\n                return this.getState().flat().join();\n            }\n        },\n        {\n            key: \"moveIfPlaying\",\n            value: function moveIfPlaying(callback) {\n                if (this.status === \"playing\") {\n                    var state = this.getStrState();\n                    for(var i = 0; i < this.state.length; i++)callback(i);\n                    if (state !== this.getStrState()) this.randomNum();\n                }\n            }\n        },\n        {\n            key: \"moveLeft\",\n            value: function moveLeft() {\n                var _this = this;\n                this.moveIfPlaying(function(i) {\n                    return _this.mergeRow(i);\n                });\n            }\n        },\n        {\n            key: \"moveRight\",\n            value: function moveRight() {\n                var _this = this;\n                this.moveIfPlaying(function(i) {\n                    return _this.mergeRow(i, true);\n                });\n            }\n        },\n        {\n            key: \"moveUp\",\n            value: function moveUp() {\n                var _this = this;\n                this.moveIfPlaying(function(i) {\n                    return _this.mergeColumn(i);\n                });\n            }\n        },\n        {\n            key: \"moveDown\",\n            value: function moveDown() {\n                var _this = this;\n                this.moveIfPlaying(function(i) {\n                    return _this.mergeColumn(i, true);\n                });\n            }\n        },\n        {\n            /**\n   * @returns {number}\n   */ key: \"getScore\",\n            value: function getScore() {\n                return this.score;\n            }\n        },\n        {\n            /**\n   * @returns {number[][]}\n   */ key: \"getState\",\n            value: function getState() {\n                return this.state;\n            }\n        },\n        {\n            /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */ key: \"getStatus\",\n            value: function getStatus() {\n                if (this.status === \"idle\") return \"idle\";\n                if (this.state.flat().findIndex(function(el) {\n                    return el === 2048;\n                }) !== -1) return \"win\";\n                var copy = new Game($3d28d7f1aac198f5$var$copyState(this.state));\n                copy.status = \"playing\";\n                copy.moveDown();\n                copy.moveLeft();\n                copy.moveRight();\n                copy.moveUp();\n                if (copy.getScore() === 0 && this.state.flat().findIndex(function(el) {\n                    return el === 0;\n                }) === -1) return \"lose\";\n                return this.status;\n            }\n        },\n        {\n            /**\n   * Starts the game.\n   */ key: \"start\",\n            value: function start() {\n                this.randomNum();\n                this.randomNum();\n                this.status = \"playing\";\n            }\n        },\n        {\n            /**\n   * Resets the game.\n   */ key: \"restart\",\n            value: function restart() {\n                this.state = $3d28d7f1aac198f5$var$copyState(this.initialState);\n                this.score = 0;\n                this.status = \"idle\";\n            }\n        }\n    ]);\n    return Game;\n}();\n$3d28d7f1aac198f5$exports = $3d28d7f1aac198f5$var$Game;\n\n\nvar $197cd56b15c33885$var$game = new $3d28d7f1aac198f5$exports();\nvar $197cd56b15c33885$var$gameScore = document.querySelector(\".game-score\");\nvar $197cd56b15c33885$var$messageStart = document.querySelector(\".message-start\");\nvar $197cd56b15c33885$var$messageLose = document.querySelector(\".message-lose\");\nvar $197cd56b15c33885$var$messageWin = document.querySelector(\".message-win\");\nvar $197cd56b15c33885$var$button = document.querySelector(\"button.button\");\nvar $197cd56b15c33885$var$rows = document.querySelectorAll(\".field-row\");\nvar $197cd56b15c33885$var$renderCurrentState = function() {\n    var state = $197cd56b15c33885$var$game.getState();\n    for(var i = 0; i < state.length; i++)for(var j = 0; j < state.length; j++){\n        var number = state[i][j];\n        var cell = $197cd56b15c33885$var$rows.item(i).children.item(j);\n        cell.className = \"field-cell\";\n        cell.textContent = \"\";\n        if (number !== 0) {\n            cell.classList.add(\"field-cell--\".concat(number));\n            cell.textContent = number;\n        }\n    }\n};\nvar $197cd56b15c33885$var$updateGameScore = function(newScore) {\n    $197cd56b15c33885$var$gameScore.innerText = newScore;\n    $197cd56b15c33885$var$gameScore.value = newScore;\n};\ndocument.addEventListener(\"keydown\", function(param) {\n    var key = param.key;\n    if ($197cd56b15c33885$var$game.getStatus() === \"idle\") return;\n    if ($197cd56b15c33885$var$game.getStatus() === \"lose\") $197cd56b15c33885$var$messageLose.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"win\") $197cd56b15c33885$var$messageWin.classList.remove(\"hidden\");\n    if ($197cd56b15c33885$var$game.getStatus() === \"playing\") {\n        if (key === \"ArrowLeft\") $197cd56b15c33885$var$game.moveLeft();\n        if (key === \"ArrowRight\") $197cd56b15c33885$var$game.moveRight();\n        if (key === \"ArrowUp\") $197cd56b15c33885$var$game.moveUp();\n        if (key === \"ArrowDown\") $197cd56b15c33885$var$game.moveDown();\n        $197cd56b15c33885$var$renderCurrentState();\n    }\n    $197cd56b15c33885$var$updateGameScore($197cd56b15c33885$var$game.getScore());\n});\nvar $197cd56b15c33885$var$setGame = function() {\n    $197cd56b15c33885$var$game.start();\n    $197cd56b15c33885$var$renderCurrentState();\n    $197cd56b15c33885$var$messageStart.classList.add(\"hidden\");\n};\nvar $197cd56b15c33885$var$resetGame = function() {\n    $197cd56b15c33885$var$game.restart();\n    $197cd56b15c33885$var$renderCurrentState();\n    $197cd56b15c33885$var$updateGameScore($197cd56b15c33885$var$game.getScore());\n    $197cd56b15c33885$var$messageLose.classList.add(\"hidden\");\n    $197cd56b15c33885$var$messageWin.classList.add(\"hidden\");\n};\n$197cd56b15c33885$var$button.addEventListener(\"click\", function(param) {\n    var target = param.target;\n    $197cd56b15c33885$var$resetGame();\n    $197cd56b15c33885$var$setGame();\n    target.classList.remove(\"start\");\n    target.classList.add(\"restart\");\n    target.innerText = \"Restart\";\n    target.style.fontSize = \"17px\";\n});\n\n})();\n//# sourceMappingURL=index.60cf1a22.js.map\n","'use strict';\n\nconst Game = require('../modules/Game.class');\nconst game = new Game();\n\nconst gameScore = document.querySelector('.game-score');\nconst messageStart = document.querySelector('.message-start');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\nconst button = document.querySelector('button.button');\nconst rows = document.querySelectorAll('.field-row');\n\nconst renderCurrentState = () => {\n  const state = game.getState();\n\n  for (let i = 0; i < state.length; i++) {\n    for (let j = 0; j < state.length; j++) {\n      const number = state[i][j];\n      const cell = rows.item(i).children.item(j);\n\n      cell.className = 'field-cell';\n      cell.textContent = '';\n\n      if (number !== 0) {\n        cell.classList.add(`field-cell--${number}`);\n        cell.textContent = number;\n      }\n    }\n  }\n};\n\nconst updateGameScore = (newScore) => {\n  gameScore.innerText = newScore;\n  gameScore.value = newScore;\n};\n\ndocument.addEventListener('keydown', ({ key }) => {\n  if (game.getStatus() === 'idle') {\n    return;\n  }\n\n  if (game.getStatus() === 'lose') {\n    messageLose.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === 'win') {\n    messageWin.classList.remove('hidden');\n  }\n\n  if (game.getStatus() === 'playing') {\n    if (key === 'ArrowLeft') {\n      game.moveLeft();\n    }\n\n    if (key === 'ArrowRight') {\n      game.moveRight();\n    }\n\n    if (key === 'ArrowUp') {\n      game.moveUp();\n    }\n\n    if (key === 'ArrowDown') {\n      game.moveDown();\n    }\n\n    renderCurrentState();\n  }\n\n  updateGameScore(game.getScore());\n});\n\nconst setGame = () => {\n  game.start();\n  renderCurrentState();\n\n  messageStart.classList.add('hidden');\n};\n\nconst resetGame = () => {\n  game.restart();\n  renderCurrentState();\n  updateGameScore(game.getScore());\n\n  messageLose.classList.add('hidden');\n  messageWin.classList.add('hidden');\n};\n\nbutton.addEventListener('click', ({ target }) => {\n  resetGame();\n  setGame();\n\n  target.classList.remove('start');\n  target.classList.add('restart');\n  target.innerText = 'Restart';\n  target.style.fontSize = '17px';\n});\n","'use strict';\n\nfunction copyState(state) {\n  return state.map(row => [...row]);\n}\n\nclass Game {\n  /**\n   * Creates a new game instance.\n   *\n   * @param {number[][]} initialState\n   * The initial state of the board.\n   * @default\n   * [[0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0],\n   *  [0, 0, 0, 0]]\n   *\n   * If passed, the board will be initialized with the provided\n   * initial state.\n   */\n  constructor(initialState = [\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n    [0, 0, 0, 0],\n  ]) {\n    this.state = copyState(initialState);\n    this.initialState = copyState(initialState);\n    this.score = 0;\n    this.status = 'idle';\n  }\n\n  randomNum() {\n    const keys = Object\n      .entries(this.state.flat())\n      .filter(([, value]) => value === 0)\n      .map(([key]) => key);\n\n    if (keys.length === 0) {\n      return;\n    }\n\n    const index = keys[Math.floor(Math.random() * keys.length)];\n    const rowKey = Math.floor(index / this.state.length);\n    const columnKey = index % this.state.length;\n    const num = Math.random() >= 0.9 ? 4 : 2;\n\n    this.state[rowKey][columnKey] = num;\n  }\n  mergeArr(arr, inverse = false) {\n    if (inverse) {\n      for (let i = arr.length - 1; i > 0; i--) {\n        if (arr[i] !== 0) {\n          for (let j = i - 1; j >= 0; j--) {\n            if (arr[i] === arr[j]) {\n              arr[i] *= 2;\n              arr[j] = 0;\n              this.score += arr[i];\n\n              break;\n            } else if (arr[i] !== arr[j] && arr[j]) {\n              break;\n            }\n          }\n        }\n      }\n\n      for (let i = arr.length - 1; i > 0; i--) {\n        if (arr[i] === 0) {\n          for (let j = i - 1; j >= 0; j--) {\n            if (arr[j] !== 0) {\n              arr[i] = arr[j];\n              arr[j] = 0;\n              break;\n            }\n          }\n        }\n      }\n    } else {\n      for (let i = 0; i < arr.length - 1; i++) {\n        if (arr[i] !== 0) {\n          for (let j = i + 1; j < arr.length; j++) {\n            if (arr[i] === arr[j]) {\n              arr[i] *= 2;\n              arr[j] = 0;\n              this.score += arr[i];\n\n              break;\n            } else if (arr[i] !== arr[j] && arr[j]) {\n              break;\n            }\n          }\n        }\n      }\n\n      for (let i = 0; i < arr.length; i++) {\n        if (arr[i] === 0) {\n          for (let j = i + 1; j < arr.length; j++) {\n            if (arr[j] !== 0) {\n              arr[i] = arr[j];\n              arr[j] = 0;\n              break;\n            }\n          }\n        }\n      }\n    }\n  }\n  mergeColumn(index, inverse = false) {\n    const column = this.state.map(row => row[index]);\n\n    this.mergeArr(column, inverse);\n\n    this.state.forEach((row, rowIndex) => {\n      row[index] = column[rowIndex];\n    });\n  }\n  mergeRow(index, inverse = false) {\n    const row = this.state[index];\n\n    this.mergeArr(row, inverse);\n  }\n  getStrState() {\n    return this.getState().flat().join();\n  }\n  moveIfPlaying(callback) {\n    if (this.status === 'playing') {\n      const state = this.getStrState();\n\n      for (let i = 0; i < this.state.length; i++) {\n        callback(i);\n      }\n\n      if (state !== this.getStrState()) {\n        this.randomNum();\n      }\n    }\n  }\n  moveLeft() {\n    this.moveIfPlaying((i) => this.mergeRow(i));\n  }\n  moveRight() {\n    this.moveIfPlaying((i) => this.mergeRow(i, true));\n  }\n  moveUp() {\n    this.moveIfPlaying((i) => this.mergeColumn(i));\n  }\n  moveDown() {\n    this.moveIfPlaying((i) => this.mergeColumn(i, true));\n  }\n\n  /**\n   * @returns {number}\n   */\n  getScore() {\n    return this.score;\n  }\n\n  /**\n   * @returns {number[][]}\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Returns the current game status.\n   *\n   * @returns {string} One of: 'idle', 'playing', 'win', 'lose'\n   *\n   * `idle` - the game has not started yet (the initial state);\n   * `playing` - the game is in progress;\n   * `win` - the game is won;\n   * `lose` - the game is lost\n   */\n  getStatus() {\n    if (this.status === 'idle') {\n      return 'idle';\n    }\n\n    if (this.state.flat().findIndex(el => el === 2048) !== -1) {\n      return 'win';\n    }\n\n    const copy = new Game(copyState(this.state));\n\n    copy.status = 'playing';\n    copy.moveDown();\n    copy.moveLeft();\n    copy.moveRight();\n    copy.moveUp();\n\n    if (copy.getScore() === 0\n      && this.state.flat().findIndex(el => el === 0) === -1) {\n      return 'lose';\n    }\n\n    return this.status;\n  }\n\n  /**\n   * Starts the game.\n   */\n  start() {\n    this.randomNum();\n    this.randomNum();\n\n    this.status = 'playing';\n  }\n\n  /**\n   * Resets the game.\n   */\n  restart() {\n    this.state = copyState(this.initialState);\n    this.score = 0;\n    this.status = 'idle';\n  }\n}\n\nmodule.exports = Game;\n","export function _class_call_check(instance, Constructor) {\n    if (!(instance instanceof Constructor)) throw new TypeError(\"Cannot call a class as a function\");\n}\nexport { _class_call_check as _ };\n","function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n        var descriptor = props[i];\n        descriptor.enumerable = descriptor.enumerable || false;\n        descriptor.configurable = true;\n\n        if (\"value\" in descriptor) descriptor.writable = true;\n\n        Object.defineProperty(target, descriptor.key, descriptor);\n    }\n}\nexport function _create_class(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n\n    return Constructor;\n}\nexport { _create_class as _ };\n","import { _array_with_holes } from \"./_array_with_holes.js\";\nimport { _iterable_to_array_limit } from \"./_iterable_to_array_limit.js\";\nimport { _non_iterable_rest } from \"./_non_iterable_rest.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _sliced_to_array(arr, i) {\n    return _array_with_holes(arr) || _iterable_to_array_limit(arr, i) || _unsupported_iterable_to_array(arr, i) || _non_iterable_rest();\n}\nexport { _sliced_to_array as _ };\n","export function _array_with_holes(arr) {\n    if (Array.isArray(arr)) return arr;\n}\nexport { _array_with_holes as _ };\n","export function _iterable_to_array_limit(arr, i) {\n    var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n    if (_i == null) return;\n\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _s, _e;\n\n    try {\n        for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n            _arr.push(_s.value);\n            if (i && _arr.length === i) break;\n        }\n    } catch (err) {\n        _d = true;\n        _e = err;\n    } finally {\n        try {\n            if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n        } finally {\n            if (_d) throw _e;\n        }\n    }\n\n    return _arr;\n}\nexport { _iterable_to_array_limit as _ };\n","export function _non_iterable_rest() {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_rest as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nexport { _unsupported_iterable_to_array as _ };\n","export function _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n}\nexport { _array_like_to_array as _ };\n","import { _array_without_holes } from \"./_array_without_holes.js\";\nimport { _iterable_to_array } from \"./_iterable_to_array.js\";\nimport { _non_iterable_spread } from \"./_non_iterable_spread.js\";\nimport { _unsupported_iterable_to_array } from \"./_unsupported_iterable_to_array.js\";\n\nexport function _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nexport { _to_consumable_array as _ };\n","import { _array_like_to_array } from \"./_array_like_to_array.js\";\n\nexport function _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nexport { _array_without_holes as _ };\n","export function _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) {\n        return Array.from(iter);\n    }\n}\nexport { _iterable_to_array as _ };\n","export function _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nexport { _non_iterable_spread as _ };\n"],"names":["$4fc75ccb937ab1df$var$_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","$c3b10a83b523f372$export$79e617b1955a2616","arr","len","arr2","Array","$d4f69c5c6c4654b1$export$a5be06335b3a083c","o","minLen","n","prototype","toString","call","slice","constructor","name","from","test","$efec029548ccee7f$export$fdf2a89c76341bbf","isArray","_s","_e","_i","Symbol","iterator","_arr","_n","_d","next","done","push","value","err","TypeError","$3d28d7f1aac198f5$var$copyState","state","map","row","iter","$197cd56b15c33885$var$game","protoProps","staticProps","Game","initialState","arguments","instance","Constructor","score","status","keys","entries","flat","filter","param","_param","index","Math","floor","random","rowKey","columnKey","inverse","j","i1","j1","i2","j2","i3","j3","column","mergeArr","forEach","rowIndex","getState","join","callback","getStrState","randomNum","_this","moveIfPlaying","mergeRow","mergeColumn","findIndex","el","copy","moveDown","moveLeft","moveRight","moveUp","getScore","$197cd56b15c33885$var$gameScore","document","querySelector","$197cd56b15c33885$var$messageStart","$197cd56b15c33885$var$messageLose","$197cd56b15c33885$var$messageWin","$197cd56b15c33885$var$button","$197cd56b15c33885$var$rows","querySelectorAll","$197cd56b15c33885$var$renderCurrentState","number","cell","item","children","className","textContent","classList","add","concat","$197cd56b15c33885$var$updateGameScore","newScore","innerText","addEventListener","getStatus","remove","$197cd56b15c33885$var$setGame","start","$197cd56b15c33885$var$resetGame","restart","style","fontSize"],"version":3,"file":"index.60cf1a22.js.map"}